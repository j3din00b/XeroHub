<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FFmpeg on XeroLinux HQ</title>
    <link>https://xerolinux.xyz/tags/ffmpeg/</link>
    <description>Recent content in FFmpeg on XeroLinux HQ</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 20 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://xerolinux.xyz/tags/ffmpeg/index.xml" rel="self" type="application/rss+xml" />
    <item>
    <title>FFmpeg cheat sheet</title>
      <link>https://xerolinux.xyz/posts/ffmpeg-cheat-sheet/</link>
        <pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate>
        <guid>https://xerolinux.xyz/posts/ffmpeg-cheat-sheet/</guid>
        <description>&lt;p&gt;This will come in useful to all of you Content Creators out there, who like doing things the G33ky &amp;amp; Nerdy way. I use it a lot. This is a a list of useful commands for the &lt;strong&gt;FFmpeg&lt;/strong&gt; command line tool.&lt;/p&gt;&#xA;&lt;p&gt;I would highly recommend you bookmark this page for later use.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;h1 class=&#34;relative group&#34;&gt;FFmpeg cheat sheet &#xA;    &lt;div id=&#34;ffmpeg-cheat-sheet&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#ffmpeg-cheat-sheet&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h1&gt;&#xA;&lt;p&gt;A list of useful commands for the FFmpeg command line tool.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Download FFmpeg &amp;raquo; &lt;a href=&#34;https://www.ffmpeg.org/download.html&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Over Here&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Full documentation &amp;raquo; &lt;a href=&#34;https://www.ffmpeg.org/ffmpeg.html&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Over Here&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Basic conversion &#xA;    &lt;div id=&#34;basic-conversion&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#basic-conversion&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 out.avi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h3 class=&#34;relative group&#34;&gt;Remux an MKV file into MP4 &#xA;    &lt;div id=&#34;remux-an-mkv-file-into-mp4&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#remux-an-mkv-file-into-mp4&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mkv -c:v copy -c:a copy out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h3 class=&#34;relative group&#34;&gt;High-quality encoding &#xA;    &lt;div id=&#34;high-quality-encoding&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#high-quality-encoding&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Use the &lt;code&gt;crf&lt;/code&gt; (Constant Rate Factor) parameter to control the output quality. The lower crf, the higher the quality (range: 0-51). The default value is 23, and visually lossless compression corresponds to &lt;code&gt;-crf 18&lt;/code&gt;. Use the &lt;code&gt;preset&lt;/code&gt; parameter to control the speed of the compression process. Additional info &amp;raquo; &lt;a href=&#34;https://trac.ffmpeg.org/wiki/Encode/H.264&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Over Here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -preset slower -crf &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Trimming &#xA;    &lt;div id=&#34;trimming&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#trimming&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Without re-encoding:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -ss &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;start&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -i in.mp4 -t &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;duration&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -c copy out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://ffmpeg.org/ffmpeg-all.html#Main-options&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;-ss&lt;/code&gt;&lt;/a&gt; specifies the start time, e.g. &lt;code&gt;00:01:23.000&lt;/code&gt; or &lt;code&gt;83&lt;/code&gt; (in seconds)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://ffmpeg.org/ffmpeg-all.html#Main-options&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/a&gt; specifies the duration of the clip (same format).&lt;/li&gt;&#xA;&lt;li&gt;Recent &lt;code&gt;ffmpeg&lt;/code&gt; also has a flag to supply the end time with &lt;code&gt;-to&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://ffmpeg.org/ffmpeg-all.html#Main-options&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/a&gt; copy copies the first video, audio, and subtitle bitstream from the input to the output file without re-encoding them. This won&amp;rsquo;t harm the quality and make the command run within seconds.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;With re-encoding:&lt;/p&gt;&#xA;&lt;p&gt;If you leave out the &lt;code&gt;-c copy&lt;/code&gt; option, &lt;code&gt;ffmpeg&lt;/code&gt; will automatically re-encode the output video and audio according to the format you chose. For high quality video and audio, read the &lt;a href=&#34;https://ffmpeg.org/trac/ffmpeg/wiki/x264EncodingGuide&#34; target=&#34;_blank&#34;&gt;x264 Encoding Guide&lt;/a&gt; and the &lt;a href=&#34;http://ffmpeg.org/trac/ffmpeg/wiki/AACEncodingGuide&#34; target=&#34;_blank&#34;&gt;AAC Encoding Guide&lt;/a&gt;, respectively.&lt;/p&gt;&#xA;&lt;p&gt;For example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -ss &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;start&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -i in.mp4 -t &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;duration&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -c:v libx264 -c:a aac -strict experimental -b:a 128k out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Mux video and audio from another video &#xA;    &lt;div id=&#34;mux-video-and-audio-from-another-video&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#mux-video-and-audio-from-another-video&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;To copy the video from in0.mp4 and audio from in1.mp4:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in0.mp4 -i in1.mp4 -c copy -map 0:0 -map 1:1 -shortest out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;With &lt;a href=&#34;http://ffmpeg.org/ffmpeg.html#Stream-copy&#34; target=&#34;_blank&#34;&gt;-c copy&lt;/a&gt; the streams will be &lt;code&gt;stream copied&lt;/code&gt;, not re-encoded, so there will be no quality loss. If you want to re-encode, see &lt;a href=&#34;https://trac.ffmpeg.org/wiki/Encode/H.264&#34; target=&#34;_blank&#34;&gt;FFmpeg Wiki: H.264 Encoding Guide&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;-shortest&lt;/code&gt; option will cause the output duration to match the duration of the shortest input stream.&lt;/li&gt;&#xA;&lt;li&gt;See the &lt;a href=&#34;http://ffmpeg.org/ffmpeg.html#Advanced-options&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;-map&lt;/code&gt; option documentation&lt;/a&gt; for more info.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Concat demuxer &#xA;    &lt;div id=&#34;concat-demuxer&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#concat-demuxer&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;First, make a text file.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file &lt;span class=&#34;s1&#34;&gt;&amp;#39;in1.mp4&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file &lt;span class=&#34;s1&#34;&gt;&amp;#39;in2.mp4&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file &lt;span class=&#34;s1&#34;&gt;&amp;#39;in3.mp4&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file &lt;span class=&#34;s1&#34;&gt;&amp;#39;in4.mp4&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then, run &lt;code&gt;ffmpeg&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -f concat -i list.txt -c copy out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Delay audio/video &#xA;    &lt;div id=&#34;delay-audiovideo&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#delay-audiovideo&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Delay video by 3.84 seconds:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -itsoffset 3.84 -i in.mp4 -map 1:v -map 0:a -vcodec copy -acodec copy out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Delay audio by 3.84 seconds:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -itsoffset 3.84 -i in.mp4 -map 0:v -map 1:a -vcodec copy -acodec copy out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Burn subtitles &#xA;    &lt;div id=&#34;burn-subtitles&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#burn-subtitles&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Use the &lt;a href=&#34;http://ffmpeg.org/ffmpeg.html#ass&#34; target=&#34;_blank&#34;&gt;libass&lt;/a&gt; library (make sure your ffmpeg install has the library in the configuration &lt;code&gt;--enable-libass&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;First convert the subtitles to .ass format:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i sub.srt sub.ass&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then add them using a video filter:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -vf &lt;span class=&#34;nv&#34;&gt;ass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sub.ass out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Extract the frames from a video &#xA;    &lt;div id=&#34;extract-the-frames-from-a-video&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#extract-the-frames-from-a-video&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;To extract all frames from between 1 and 5 seconds, and also between 11 and 15 seconds:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -vf &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;between(t,1,5)+between(t,11,15)&amp;#39;&lt;/span&gt; -vsync &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; out%d.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To extract one frame per second only:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -fps&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -vsync &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; out%d.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Rotate a video &#xA;    &lt;div id=&#34;rotate-a-video&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#rotate-a-video&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Rotate 90 clockwise:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mov -vf &lt;span class=&#34;s2&#34;&gt;&amp;#34;transpose=1&amp;#34;&lt;/span&gt; out.mov&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the transpose parameter you can pass:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 90CounterCLockwise and Vertical Flip &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 90Clockwise&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 90CounterClockwise&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 90Clockwise and Vertical Flip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use &lt;code&gt;-vf &amp;quot;transpose=2,transpose=2&amp;quot;&lt;/code&gt; for 180 degrees.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Download &amp;ldquo;Transport Stream&amp;rdquo; video streams &#xA;    &lt;div id=&#34;download-transport-stream-video-streams&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#download-transport-stream-video-streams&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Locate the playlist file, e.g. using Chrome &amp;gt; F12 &amp;gt; Network &amp;gt; Filter: m3u8&lt;/li&gt;&#xA;&lt;li&gt;Download and concatenate the video fragments:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;path_to_playlist.m3u8&amp;#34;&lt;/span&gt; -c copy -bsf:a aac_adtstoasc out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you get a &amp;ldquo;Protocol &amp;lsquo;https not on whitelist &amp;lsquo;file,crypto&amp;rsquo;!&amp;rdquo; error, add the &lt;code&gt;protocol_whitelist&lt;/code&gt; option:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -protocol_whitelist &lt;span class=&#34;s2&#34;&gt;&amp;#34;file,http,https,tcp,tls&amp;#34;&lt;/span&gt; -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;path_to_playlist.m3u8&amp;#34;&lt;/span&gt; -c copy -bsf:a aac_adtstoasc out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Mute some of the audio &#xA;    &lt;div id=&#34;mute-some-of-the-audio&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#mute-some-of-the-audio&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;To replace the first 90 seconds of audio with silence:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -vcodec copy -af &lt;span class=&#34;s2&#34;&gt;&amp;#34;volume=enable=&amp;#39;lte(t,90)&amp;#39;:volume=0&amp;#34;&lt;/span&gt; out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To replace all audio between 1&#39;20&amp;quot; and 1&#39;30&amp;quot; with silence:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -vcodec copy -af &lt;span class=&#34;s2&#34;&gt;&amp;#34;volume=enable=&amp;#39;between(t,80,90)&amp;#39;:volume=0&amp;#34;&lt;/span&gt; out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Deinterlace &#xA;    &lt;div id=&#34;deinterlace&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#deinterlace&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Deinterlacing using &amp;ldquo;yet another deinterlacing filter&amp;rdquo;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -vf yadif out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Create a video slideshow from images &#xA;    &lt;div id=&#34;create-a-video-slideshow-from-images&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#create-a-video-slideshow-from-images&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Parameters: &lt;code&gt;-r&lt;/code&gt; marks the image framerate (inverse time of each image); &lt;code&gt;-vf fps=25&lt;/code&gt; marks the true framerate of the output.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -r 1/5 -i img%03d.png -c:v libx264 -vf &lt;span class=&#34;nv&#34;&gt;fps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; -pix_fmt yuv420p out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Extract images from a video &#xA;    &lt;div id=&#34;extract-images-from-a-video&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#extract-images-from-a-video&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Extract all frames: &lt;code&gt;ffmpeg -i input.mp4 thumb%04d.jpg -hide_banner&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Extract a frame each second: &lt;code&gt;ffmpeg -i input.mp4 -vf fps=1 thumb%04d.jpg -hide_banner&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Extract only one frame: &lt;code&gt;ffmpeg -i input.mp4 -ss 00:00:10.000 -vframes 1 thumb.jpg&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Display the frame number on each frame &#xA;    &lt;div id=&#34;display-the-frame-number-on-each-frame&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#display-the-frame-number-on-each-frame&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mov -vf &lt;span class=&#34;s2&#34;&gt;&amp;#34;drawtext=fontfile=arial.ttf: text=%{n}: x=(w-tw)/2: y=h-(2*lh): fontcolor=white: box=1: boxcolor=0x00000099: fontsize=72&amp;#34;&lt;/span&gt; -y out.mov&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;h2 class=&#34;relative group&#34;&gt;Metadata: Change the title &#xA;    &lt;div id=&#34;metadata-change-the-title&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;&#xA;    &#xA;    &lt;span&#xA;        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;&#xA;        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;&#xA;            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#metadata-change-the-title&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;&#xA;    &lt;/span&gt;        &#xA;    &#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffmpeg -i in.mp4 -map_metadata -1 -metadata &lt;span class=&#34;nv&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;My Title&amp;#34;&lt;/span&gt; -c:v copy -c:a copy out.mp4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hope this helps anyone out there&amp;hellip;&lt;/p&gt;&#xA;</description>
        <content:encoded>&lt;![CDATA[<p>This will come in useful to all of you Content Creators out there, who like doing things the G33ky &amp; Nerdy way. I use it a lot. This is a a list of useful commands for the <strong>FFmpeg</strong> command line tool.</p>
<p>I would highly recommend you bookmark this page for later use.</p>


<h1 class="relative group">FFmpeg cheat sheet 
    <div id="ffmpeg-cheat-sheet" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#ffmpeg-cheat-sheet" aria-label="Anchor">#</a>
    </span>        
    
</h1>
<p>A list of useful commands for the FFmpeg command line tool.</p>
<ul>
<li>Download FFmpeg &raquo; <a href="https://www.ffmpeg.org/download.html" target="_blank"><strong>Over Here</strong></a></li>
<li>Full documentation &raquo; <a href="https://www.ffmpeg.org/ffmpeg.html" target="_blank"><strong>Over Here</strong></a></li>
</ul>


<h2 class="relative group">Basic conversion 
    <div id="basic-conversion" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#basic-conversion" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 out.avi
</span></span></code></pre></div>

<h3 class="relative group">Remux an MKV file into MP4 
    <div id="remux-an-mkv-file-into-mp4" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#remux-an-mkv-file-into-mp4" aria-label="Anchor">#</a>
    </span>        
    
</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mkv -c:v copy -c:a copy out.mp4
</span></span></code></pre></div>

<h3 class="relative group">High-quality encoding 
    <div id="high-quality-encoding" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#high-quality-encoding" aria-label="Anchor">#</a>
    </span>        
    
</h3>
<p>Use the <code>crf</code> (Constant Rate Factor) parameter to control the output quality. The lower crf, the higher the quality (range: 0-51). The default value is 23, and visually lossless compression corresponds to <code>-crf 18</code>. Use the <code>preset</code> parameter to control the speed of the compression process. Additional info &raquo; <a href="https://trac.ffmpeg.org/wiki/Encode/H.264" target="_blank"><strong>Over Here</strong></a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -preset slower -crf <span class="m">18</span> out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Trimming 
    <div id="trimming" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#trimming" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>Without re-encoding:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -ss <span class="o">[</span>start<span class="o">]</span> -i in.mp4 -t <span class="o">[</span>duration<span class="o">]</span> -c copy out.mp4
</span></span></code></pre></div><ul>
<li><a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank"><code>-ss</code></a> specifies the start time, e.g. <code>00:01:23.000</code> or <code>83</code> (in seconds)</li>
<li><a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank"><code>-t</code></a> specifies the duration of the clip (same format).</li>
<li>Recent <code>ffmpeg</code> also has a flag to supply the end time with <code>-to</code>.</li>
<li><a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank"><code>-c</code></a> copy copies the first video, audio, and subtitle bitstream from the input to the output file without re-encoding them. This won&rsquo;t harm the quality and make the command run within seconds.</li>
</ul>
<p>With re-encoding:</p>
<p>If you leave out the <code>-c copy</code> option, <code>ffmpeg</code> will automatically re-encode the output video and audio according to the format you chose. For high quality video and audio, read the <a href="https://ffmpeg.org/trac/ffmpeg/wiki/x264EncodingGuide" target="_blank">x264 Encoding Guide</a> and the <a href="http://ffmpeg.org/trac/ffmpeg/wiki/AACEncodingGuide" target="_blank">AAC Encoding Guide</a>, respectively.</p>
<p>For example:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -ss <span class="o">[</span>start<span class="o">]</span> -i in.mp4 -t <span class="o">[</span>duration<span class="o">]</span> -c:v libx264 -c:a aac -strict experimental -b:a 128k out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Mux video and audio from another video 
    <div id="mux-video-and-audio-from-another-video" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#mux-video-and-audio-from-another-video" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>To copy the video from in0.mp4 and audio from in1.mp4:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in0.mp4 -i in1.mp4 -c copy -map 0:0 -map 1:1 -shortest out.mp4
</span></span></code></pre></div><ul>
<li>With <a href="http://ffmpeg.org/ffmpeg.html#Stream-copy" target="_blank">-c copy</a> the streams will be <code>stream copied</code>, not re-encoded, so there will be no quality loss. If you want to re-encode, see <a href="https://trac.ffmpeg.org/wiki/Encode/H.264" target="_blank">FFmpeg Wiki: H.264 Encoding Guide</a>.</li>
<li>The <code>-shortest</code> option will cause the output duration to match the duration of the shortest input stream.</li>
<li>See the <a href="http://ffmpeg.org/ffmpeg.html#Advanced-options" target="_blank"><code>-map</code> option documentation</a> for more info.</li>
</ul>


<h2 class="relative group">Concat demuxer 
    <div id="concat-demuxer" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#concat-demuxer" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>First, make a text file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">file <span class="s1">&#39;in1.mp4&#39;</span>
</span></span><span class="line"><span class="cl">file <span class="s1">&#39;in2.mp4&#39;</span>
</span></span><span class="line"><span class="cl">file <span class="s1">&#39;in3.mp4&#39;</span>
</span></span><span class="line"><span class="cl">file <span class="s1">&#39;in4.mp4&#39;</span>
</span></span></code></pre></div><p>Then, run <code>ffmpeg</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -f concat -i list.txt -c copy out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Delay audio/video 
    <div id="delay-audiovideo" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#delay-audiovideo" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>Delay video by 3.84 seconds:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -itsoffset 3.84 -i in.mp4 -map 1:v -map 0:a -vcodec copy -acodec copy out.mp4
</span></span></code></pre></div><p>Delay audio by 3.84 seconds:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -itsoffset 3.84 -i in.mp4 -map 0:v -map 1:a -vcodec copy -acodec copy out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Burn subtitles 
    <div id="burn-subtitles" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#burn-subtitles" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>Use the <a href="http://ffmpeg.org/ffmpeg.html#ass" target="_blank">libass</a> library (make sure your ffmpeg install has the library in the configuration <code>--enable-libass</code>).</p>
<p>First convert the subtitles to .ass format:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i sub.srt sub.ass
</span></span></code></pre></div><p>Then add them using a video filter:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vf <span class="nv">ass</span><span class="o">=</span>sub.ass out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Extract the frames from a video 
    <div id="extract-the-frames-from-a-video" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#extract-the-frames-from-a-video" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>To extract all frames from between 1 and 5 seconds, and also between 11 and 15 seconds:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vf <span class="k">select</span><span class="o">=</span><span class="s1">&#39;between(t,1,5)+between(t,11,15)&#39;</span> -vsync <span class="m">0</span> out%d.png
</span></span></code></pre></div><p>To extract one frame per second only:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -fps<span class="o">=</span><span class="m">1</span> -vsync <span class="m">0</span> out%d.png
</span></span></code></pre></div>

<h2 class="relative group">Rotate a video 
    <div id="rotate-a-video" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#rotate-a-video" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>Rotate 90 clockwise:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mov -vf <span class="s2">&#34;transpose=1&#34;</span> out.mov
</span></span></code></pre></div><p>For the transpose parameter you can pass:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"><span class="nv">0</span> <span class="o">=</span> 90CounterCLockwise and Vertical Flip <span class="o">(</span>default<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">1</span> <span class="o">=</span> 90Clockwise
</span></span><span class="line"><span class="cl"><span class="nv">2</span> <span class="o">=</span> 90CounterClockwise
</span></span><span class="line"><span class="cl"><span class="nv">3</span> <span class="o">=</span> 90Clockwise and Vertical Flip
</span></span></code></pre></div><p>Use <code>-vf &quot;transpose=2,transpose=2&quot;</code> for 180 degrees.</p>


<h2 class="relative group">Download &ldquo;Transport Stream&rdquo; video streams 
    <div id="download-transport-stream-video-streams" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#download-transport-stream-video-streams" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<ol>
<li>Locate the playlist file, e.g. using Chrome &gt; F12 &gt; Network &gt; Filter: m3u8</li>
<li>Download and concatenate the video fragments:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i <span class="s2">&#34;path_to_playlist.m3u8&#34;</span> -c copy -bsf:a aac_adtstoasc out.mp4
</span></span></code></pre></div><p>If you get a &ldquo;Protocol &lsquo;https not on whitelist &lsquo;file,crypto&rsquo;!&rdquo; error, add the <code>protocol_whitelist</code> option:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -protocol_whitelist <span class="s2">&#34;file,http,https,tcp,tls&#34;</span> -i <span class="s2">&#34;path_to_playlist.m3u8&#34;</span> -c copy -bsf:a aac_adtstoasc out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Mute some of the audio 
    <div id="mute-some-of-the-audio" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#mute-some-of-the-audio" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>To replace the first 90 seconds of audio with silence:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vcodec copy -af <span class="s2">&#34;volume=enable=&#39;lte(t,90)&#39;:volume=0&#34;</span> out.mp4
</span></span></code></pre></div><p>To replace all audio between 1'20&quot; and 1'30&quot; with silence:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vcodec copy -af <span class="s2">&#34;volume=enable=&#39;between(t,80,90)&#39;:volume=0&#34;</span> out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Deinterlace 
    <div id="deinterlace" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#deinterlace" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>Deinterlacing using &ldquo;yet another deinterlacing filter&rdquo;.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vf yadif out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Create a video slideshow from images 
    <div id="create-a-video-slideshow-from-images" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#create-a-video-slideshow-from-images" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<p>Parameters: <code>-r</code> marks the image framerate (inverse time of each image); <code>-vf fps=25</code> marks the true framerate of the output.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -r 1/5 -i img%03d.png -c:v libx264 -vf <span class="nv">fps</span><span class="o">=</span><span class="m">25</span> -pix_fmt yuv420p out.mp4
</span></span></code></pre></div>

<h2 class="relative group">Extract images from a video 
    <div id="extract-images-from-a-video" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#extract-images-from-a-video" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<ul>
<li>Extract all frames: <code>ffmpeg -i input.mp4 thumb%04d.jpg -hide_banner</code></li>
<li>Extract a frame each second: <code>ffmpeg -i input.mp4 -vf fps=1 thumb%04d.jpg -hide_banner</code></li>
<li>Extract only one frame: <code>ffmpeg -i input.mp4 -ss 00:00:10.000 -vframes 1 thumb.jpg</code></li>
</ul>


<h2 class="relative group">Display the frame number on each frame 
    <div id="display-the-frame-number-on-each-frame" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#display-the-frame-number-on-each-frame" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mov -vf <span class="s2">&#34;drawtext=fontfile=arial.ttf: text=%{n}: x=(w-tw)/2: y=h-(2*lh): fontcolor=white: box=1: boxcolor=0x00000099: fontsize=72&#34;</span> -y out.mov
</span></span></code></pre></div>

<h2 class="relative group">Metadata: Change the title 
    <div id="metadata-change-the-title" class="anchor"></div>
    
    <span
        class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
        <a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
            style="text-decoration-line: none !important;" href="#metadata-change-the-title" aria-label="Anchor">#</a>
    </span>        
    
</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -map_metadata -1 -metadata <span class="nv">title</span><span class="o">=</span><span class="s2">&#34;My Title&#34;</span> -c:v copy -c:a copy out.mp4
</span></span></code></pre></div><p>Hope this helps anyone out there&hellip;</p>
]]></content:encoded>
        <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
      </item>
    </channel>
  </rss>
